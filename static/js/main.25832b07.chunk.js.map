{"version":3,"sources":["redux/ast/ast.actions.js","utils/number.utils.js","redux/design-loads/design-loads.actions.js","components/form-components/form-input/form-input.component.jsx","components/design-loads/design-loads.component.jsx","components/spacing-depth/spacing-depth.component.jsx","components/factored-moment/factored-moment.component.jsx","components/effective-depth/effective-depth.component.jsx","components/area-tension-steel/area-tension-steel.component.jsx","redux/dist-steel/dist-steel.actions.js","components/distribution-steel/distribution-steel.component.jsx","redux/check-shear/check-shear.actions.js","components/check-shear/check-shear.component.jsx","redux/check-deflection/check-deflection.actions.js","components/form-components/form-select/form-select.component.jsx","components/check-deflection/check-deflection.component.jsx","redux/check-dev-length/check-dev-length.actions.js","components/check-dev-length/check-dev-length.component.jsx","redux/input-data/input-data.actions.js","components/input-data/input-data.component.jsx","components/widget/widget.component.jsx","redux/configs/configs.actions.js","components/header/header.component.jsx","components/results/results.component.jsx","App.js","reportWebVitals.js","redux/default-state.js","redux/design-loads/design-loads.reducer.js","redux/input-data/input-data.reducer.js","redux/ast/ast.reducer.js","redux/dist-steel/dist-steel.reducer.js","redux/check-shear/check-shear.reducer.js","redux/check-deflection/check-deflection.reducer.js","redux/check-dev-length/check-dev-length.reducer.js","redux/root.reducer.jsx","redux/configs/configs.reducer.jsx","redux/store.js","index.js"],"names":["AST_DATA_ACTION_TYPES","roundOfDecimal","input","places","toFixed","DESIGN_LOADS_ACTION_TYPES","FormInput","label","handleChange","subHeading","otherInputAttrs","className","value","autoComplete","onChange","designLoad","d","live_load","extra_dead_load","res","parseFloat","isNaN","selfweight_of_slab","connect","state","inputData","designLoads","dispatch","evt","target","name","type","payload","handleDesignLoadsDataChange","centre_to_centre_spacing","clear_span","support_width","spacing","clear_span_eff_depth","effective_cover","effDepth","readOnly","factoredMoment","D19","D12","D13","Math","pow","factoredShear","max_d","fy","console","log","ru","fck","d26","required_d","b","d22","d27","sqrt","fxn_a","fxn_b","fxn_c","quadraticEq","neg","_a","_b","_c","combinedinput","areaOfTensionSteel","pos","min","providedSteel","bar_dia","spacing_provided","astAtSupport","ast","handleDataChange","DIST_STEEL_DATA_ACTION_TYPES","distributionSteel","providedDistSteel","distSteel","handleDistSteelDataChange","CHECK_SHEAR_ACTION_TYPES","normalShearStress","fxn_pt","fxn_permissibleStress","fckByPt","handleShearDataChange","CHECK_DEFLECTION_ACTION_TYPES","FormSelect","options","otherSelectAttrs","map","option","displayValue","code","requiredPt","providedPt","providedLd","fxn_mod_mft","_mod_fs","_providedPt","_k55","log10","fxn_mod_fs","mod_fac_fy","_requiredPt","isDeflectionValid","props","idaCd","CheckForDeflection","checkForDeflectionStatus","_max_ld","checkDeflection","fxn_max_ld","_providedLd","handleDeflectionChange","_mod_mft","border","colSpan","CHECK_DEV_LEN_ACTION_TYPES","fxn_mu1","_d36","fxn_vu","fxn_ld","m","checkDevLength","handleDevLengthChange","no_hooks_Lo","m_options","_mu1","_vu","_ld","_lo","INPUT_DATA_ACTION_TYPES","handleInputDataChange","Widget","title","children","CONFIG_ACTION_TYPES","configs","switchDetailedView","detailedView","color","onClick","StatusButton","status","success","error","id","depthStatus","_required_d","ast_Status","ida","_providedSteel","_areaOfTensionSteel","isAstValid","distSteelStatus","_providedDistSteel","_distributionSteel","isDistSteelValid","checkForShearStatus","_normalShearStress","_permissibleStress","isShearValid","_isDevLengthValidUsingNoHooks","isDevLengthValidUsingNoHooks","_isDevLengthValid","isDevLengthValid","App","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","checkShear","init_state","combineReducers","action","middleWares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","Provider","size","document","getElementById"],"mappings":"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","file":"static/js/main.25832b07.chunk.js","sourcesContent":["export const AST_DATA_ACTION_TYPES = {\n    SET_AST_DATA_FIELD:\"SET_AST_DATA_FIELD\"\n}\n\nexport const handleDataChange = (evt)=>{\n    const {name, value} = evt.target;\n    return({\n        type:AST_DATA_ACTION_TYPES.SET_AST_DATA_FIELD,\n        payload:{[name]:value}\n    })\n}","export const roundOfDecimal = (input, places=2) => {\r\n    if(input){\r\n        return input.toFixed(places);\r\n    }\r\n    return input;\r\n}","export const DESIGN_LOADS_ACTION_TYPES = {\n    SET_DATA_FIELD:\"SET_INPUT_DATA_FIELD\"\n}\n\nexport const handleDesignLoadsDataChange = (evt)=>{\n    const {name, value} = evt.target;\n    return({\n        type:DESIGN_LOADS_ACTION_TYPES.SET_DATA_FIELD,\n        payload:{[name]:value}\n    })\n}","import './form-input.styles.scss'\r\n\r\nlet FormInput = ({label, handleChange, subHeading, ...otherInputAttrs})=>{\r\n    return(\r\n        <div className=\"form-group\">\r\n            {\r\n                label \r\n                ? (<label className={`${otherInputAttrs.value?\"shrink\":\"\"} input-label`}>{label}</label>) \r\n                : null\r\n            }\r\n            <input className=\"form-input\" autoComplete=\"off\"\r\n                onChange = {handleChange}\r\n                {...otherInputAttrs}/>\r\n            {\r\n                subHeading \r\n                ? (<span className=\"sub-heading\">{subHeading}</span>) \r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormInput","import { connect } from \"react-redux\";\nimport { handleDesignLoadsDataChange } from \"../../redux/design-loads/design-loads.actions\";\nimport { roundOfDecimal } from \"../../utils/number.utils\";\nimport FormInput from \"../form-components/form-input/form-input.component\";\n\nimport './design-loads.styles.scss'\n\nexport const selfweight_of_slab = (d)=>{\n  //=(D16+D17+D18)*1.5\n  let res = (25 * d / 1000);\n\n  if(isNaN(res)) return \"\";\n  \n  return roundOfDecimal(res);\n}\n\nexport const designLoad = (d, live_load, extra_dead_load)=>{\n  //=(D16+D17+D18)*1.5\n  let res = (parseFloat(selfweight_of_slab(d)) + parseFloat(live_load) + parseFloat(extra_dead_load)) * 1.5;\n  \n  if(isNaN(res)) return \"\";\n    \n  return roundOfDecimal(res, 3);\n}\n\nlet DesignLoads = ({handleChange,d, live_load, extra_dead_load})=>{\n  return(\n      <div className=\"design-loads\">\n        {/* <FormInput label='selfweight of slab' subHeading=\"kn/m2\" readOnly value={selfweight_of_slab(d)}/> */}\n        <FormInput label='live load' name='live_load' subHeading=\"kn/m3\" handleChange = {handleChange} value={live_load}/>\n        <FormInput label='extra dead load' name='extra_dead_load' subHeading=\"kn/m4\" handleChange = {handleChange} value={extra_dead_load}/>\n        {/* <FormInput label='design load' readOnly value={designLoad(d, live_load, extra_dead_load)}/> */}\n      </div>\n  );\n}\n\nconst mapStateToProps = (state)=>({\n  ...state.inputData,\n  ...state.designLoads\n  })\n  \n  const mapDispatchToProps = dispatch=>({\n    handleChange: (evt) => dispatch(handleDesignLoadsDataChange(evt))\n  })\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(DesignLoads)\n","import { connect } from \"react-redux\";\r\nimport { roundOfDecimal } from \"../../utils/number.utils\";\r\nimport FormInput from \"../form-components/form-input/form-input.component\";\r\n\r\nexport const centre_to_centre_spacing = (clear_span, support_width)=>{\r\n    //=C4+C5\r\n    let spacing = parseFloat(clear_span) + parseFloat(support_width); \r\n    \r\n    if(isNaN(spacing)) return \"\";\r\n    \r\n    return roundOfDecimal(spacing);\r\n}\r\n\r\nexport const clear_span_eff_depth = (clear_span, d , effective_cover)=>{\r\n    //=C4+((C8-C10)/1000)\r\n    let effDepth = parseFloat(clear_span) + ((parseFloat(d) - parseFloat(effective_cover))/1000); \r\n    \r\n    if(isNaN(effDepth)) return \"\";\r\n    \r\n    return roundOfDecimal(effDepth, 3);\r\n}\r\n\r\nlet SpacingAndDepth = ({clear_span, support_width, d , effective_cover})=>{\r\n    return(\r\n        <div className=\"space-depth\">\r\n          <FormInput label='Centre to Centre spacing'\r\n            subHeading=\"mm\" readOnly\r\n            value={centre_to_centre_spacing(clear_span, support_width)}/>\r\n          <FormInput label='Clear span + Effective depth'\r\n            subHeading=\"mm\" readOnly\r\n            value={clear_span_eff_depth(clear_span, d , effective_cover)}/>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state)=>({\r\n    ...state.inputData  \r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, null)(SpacingAndDepth)","import { connect } from \"react-redux\";\nimport { roundOfDecimal } from \"../../utils/number.utils\";\nimport { designLoad } from \"../design-loads/design-loads.component\";\nimport FormInput from \"../form-components/form-input/form-input.component\";\nimport { centre_to_centre_spacing, clear_span_eff_depth } from \"../spacing-depth/spacing-depth.component\";\n\nexport const factoredMoment = ({d, clear_span, effective_cover, support_width,live_load, extra_dead_load})=>{\n  //=(D19*POWER(MAX(D12:D13),2))/8\n  let D19 = designLoad(d, live_load, extra_dead_load);\n  let D12 = centre_to_centre_spacing(clear_span, support_width);\n  let D13 = clear_span_eff_depth(clear_span, d , effective_cover);\n  let res = D19 *  Math.pow((D13>D12?D13:D12), 2) / 8;\n  \n  if(isNaN(res)) return \"\";\n    \n  return roundOfDecimal(res, 3);\n}\n\nexport const factoredShear = ({clear_span, d,live_load, extra_dead_load})=>{\n  //=D19*C4/2\n  let D19 = designLoad(d,live_load, extra_dead_load);\n  let res = (D19 * parseFloat(clear_span))/ 2;\n  \n  if(isNaN(res)) return \"\";\n    \n  return roundOfDecimal(res, 3);\n}\n\nlet FactoredMoments = ({inputData, designLoads})=>{\n  return(\n      <div className=\"factored-moment\">\n        <FormInput label='factored moment, Mu'\n          subHeading=\"kn/m\" readOnly\n          value={factoredMoment({...inputData, ...designLoads})}/>\n        <FormInput label='factored shear force, Vu'\n          subHeading=\"kn\" readOnly\n          value={factoredShear({...inputData, ...designLoads})}/>\n      </div>\n  );\n}\nconst mapStateToProps = (state)=>({\n  inputData: state.inputData,\n  designLoads:state.designLoads\n})\n\nexport default connect(mapStateToProps)(FactoredMoments)","import { connect } from \"react-redux\";\r\nimport { roundOfDecimal } from \"../../utils/number.utils\";\r\nimport { factoredMoment } from \"../factored-moment/factored-moment.component\";\r\nimport FormInput from \"../form-components/form-input/form-input.component\"\r\n\r\nlet max_d = (fy)=>{\r\n    console.log(fy, parseFloat(fy)===500)\r\n    return parseFloat(fy)===500?0.46:0.48;\r\n}\r\nlet ru = ({fy, fck})=>{\r\n    //0.36*C6*D26*(1-(0.42*D26))\r\n    let d26 = max_d(fy);\r\n    let res = (0.36 * fck * d26 * (1 - (0.42*d26)));\r\n    \r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return roundOfDecimal(res);\r\n}\r\n\r\nexport const required_d = (input)=>{\r\n    // SQRT((D22*1000000)/(D27*C9))\r\n    const {fy, fck, b} = input;\r\n    console.log(fy, fck, b);\r\n    let d22 = factoredMoment(input);\r\n    let d27 = ru({fy, fck});\r\n    let res = Math.sqrt((d22 * 1000000)/(d27 * b));\r\n\r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return roundOfDecimal(res);\r\n}\r\n\r\nlet fxn_a = ({fck, fy, d, b, effective_cover})=>{\r\n    // (0.87*(C8-C10)*C7*C7)/(C6*C9*(C8-C10))\r\n    let res = (0.87*(d-effective_cover)*fy*fy)/(fck*b*(d-effective_cover));\r\n    \r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return res;\r\n}\r\n\r\nlet fxn_b = ({fy, d, effective_cover})=>{\r\n    // -(0.87*(C8-C10)*C7)\r\n    let res = -(0.87*(d-effective_cover)*fy);\r\n    \r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return res;\r\n}\r\n\r\nlet fxn_c = (input)=>{\r\n    // D22*1000000\r\n    let d22 = factoredMoment(input);\r\n    let res = d22 * 1000000;\r\n    \r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return res;\r\n}\r\n\r\nexport const quadraticEq = (input, neg)=>{\r\n    const {fck, fy, d, b, effective_cover} = input;\r\n    let _a = fxn_a({fck, fy, d, b, effective_cover});\r\n    let _b = fxn_b({fy, d, effective_cover});\r\n    let _c = fxn_c(input);\r\n    //(-P26+(SQRT((P26*P26)-(4*P25*P27))))/(2*P25)\r\n    \r\n    let res = (-_b + (neg?-1:1) * (Math.sqrt((_b*_b)-(4*_a*_c))))/(2 * _a);\r\n    \r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return roundOfDecimal(res, 3);;\r\n}\r\n\r\nlet EffectiveDepth = ({inputData, designLoads})=>{\r\n    const combinedinput = {...inputData, ...designLoads};\r\n    return(\r\n        <div className='eff-depth'>\r\n            <div>\r\n                <FormInput label='Xu max/d' value={max_d(inputData.fy)} readOnly/>\r\n                <FormInput label='Ru' value={ru(inputData)} readOnly/>\r\n                <FormInput label='required d' value={required_d(combinedinput)} subHeading='mm' readOnly/>\r\n            </div>\r\n            <div>\r\n                <FormInput label='a' value={fxn_a(inputData)} readOnly/>\r\n                <FormInput label='b' value={fxn_b(inputData)} readOnly/>\r\n                <FormInput label='c' value={fxn_c(combinedinput)} readOnly/>\r\n                <div className='quadratic-eq'>\r\n                    <label>Quadratic Eq</label>\r\n                    <FormInput value={quadraticEq(combinedinput)} readOnly/>\r\n                    <FormInput value={quadraticEq(combinedinput, true)} readOnly/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n    inputData: state.inputData,\r\n    designLoads:state.designLoads\r\n  })\r\n  \r\n  export default connect(mapStateToProps)(EffectiveDepth)","import { connect } from \"react-redux\";\r\nimport { handleDataChange } from \"../../redux/ast/ast.actions\";\r\nimport { roundOfDecimal } from \"../../utils/number.utils\";\r\nimport { quadraticEq } from \"../effective-depth/effective-depth.component\"\r\nimport FormInput from \"../form-components/form-input/form-input.component\";\r\n\r\nimport './area-tension-steel.styles.scss'\r\n\r\nexport const areaOfTensionSteel = (combinedinput)=>{\r\n    let pos = quadraticEq(combinedinput);\r\n    let neg = quadraticEq(combinedinput, true);\r\n    return Math.min(pos, neg);\r\n}\r\n\r\nexport const spacingReq = (combinedinput)=>{\r\n    let d30 = areaOfTensionSteel(combinedinput);\r\n    let d31 = combinedinput.bar_dia;\r\n    let res = (1000 * ((3.14/4)*d31*d31))/d30;\r\n\r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return roundOfDecimal(res);\r\n}\r\n\r\nexport const providedSteel = ({bar_dia, spacing_provided})=>{\r\n    let res = (1000 * ((3.14/4)*bar_dia*bar_dia))/spacing_provided;\r\n    \r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return roundOfDecimal(res);\r\n}\r\n\r\nexport const astAtSupport = ({bar_dia, spacing_provided})=>{\r\n    let res = providedSteel({bar_dia, spacing_provided})/2;\r\n    \r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return roundOfDecimal(res, 3);\r\n}\r\n\r\nexport const isAstValid = ({inputData, designLoads, ast})=>{\r\n    let ida = {...inputData, ...designLoads, ...ast};\r\n    let ast_Status =  false;\r\n    let _providedSteel = providedSteel(ast);\r\n    let _areaOfTensionSteel = areaOfTensionSteel(ida);\r\n    if(!isNaN(_providedSteel) && !isNaN(_areaOfTensionSteel)){\r\n        ast_Status = _providedSteel > _areaOfTensionSteel;\r\n    }\r\n    return ast_Status\r\n}\r\n\r\nlet AreaOfTensionSteel = ({handleChange, inputData, designLoads, ast})=>{\r\n    // const combinedinput = {...inputData, ...designLoads, ...ast};\r\n    const {bar_dia, spacing_provided} = ast;\r\n    return(\r\n        <div className='area-of-tension-steel'>\r\n            {/* <FormInput label='Area of tension steel (Ast)' value={areaOfTensionSteel(combinedinput)} subHeading='mm2' readOnly /> */}\r\n            <FormInput label='bar dia' value={bar_dia} subHeading='mm' name='bar_dia' handleChange={handleChange} />\r\n            {/* <FormInput label='spacing required' value={spacingReq(combinedinput)} subHeading='mm' readOnly /> */}\r\n            <FormInput label='spacing provided' value={spacing_provided} name='spacing_provided' subHeading='mm'  handleChange={handleChange} />\r\n            <FormInput label='provided steel' value={providedSteel({bar_dia, spacing_provided})} subHeading='mm2' readOnly />\r\n            {/* <FormInput label='Ast at support' value={astAtSupport({bar_dia, spacing_provided})} subHeading='mm2' readOnly /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state)=>({\r\n    inputData: state.inputData,\r\n    designLoads: state.designLoads,\r\n    ast: state.ast\r\n})\r\n\r\nlet mapDispatchToProps = (dispatch)=>({\r\n    handleChange: (evt)=>(dispatch(handleDataChange(evt)))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaOfTensionSteel)","export const DIST_STEEL_DATA_ACTION_TYPES = {\n    SET_DIST_STEEL_DATA_FIELD:\"SET_DIST_STEEL_DATA_FIELD\"\n}\n\nexport const handleDistSteelDataChange = (evt)=>{\n    const {name, value} = evt.target;\n    return({\n        type:DIST_STEEL_DATA_ACTION_TYPES.SET_DIST_STEEL_DATA_FIELD,\n        payload:{[name]:value}\n    })\n}","import { connect } from \"react-redux\";\r\nimport { handleDistSteelDataChange } from \"../../redux/dist-steel/dist-steel.actions\";\r\nimport { roundOfDecimal } from \"../../utils/number.utils\";\r\nimport FormInput from \"../form-components/form-input/form-input.component\"\r\n\r\nimport './distribution-steel.styles.scss'\r\n\r\nexport const distributionSteel = (input)=>{\r\n    // 0.12*C9*C8/100\r\n    const {d, b} = input;\r\n    let res = 0.12 * b * d / 100\r\n    \r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return roundOfDecimal(res);\r\n}\r\n\r\nexport const spacingReq = (input)=>{\r\n    let d30 = distributionSteel(input);\r\n    let d31 = input.bar_dia;\r\n    let res = (1000 * ((3.14/4)*d31*d31))/d30;\r\n    \r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return roundOfDecimal(res);\r\n}\r\n\r\nexport const providedDistSteel = ({bar_dia, spacing_provided})=>{\r\n    let res = (1000 * ((3.14/4)*bar_dia*bar_dia))/spacing_provided;\r\n\r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return roundOfDecimal(res);\r\n}\r\n\r\nexport const isDistSteelValid = ({inputData, designLoads, distSteel})=>{\r\n    let distSteelStatus =  false;\r\n    let _providedDistSteel = parseFloat(providedDistSteel(distSteel));\r\n    let _distributionSteel = parseFloat(distributionSteel(inputData));\r\n\r\n    if(!isNaN(_providedDistSteel) && !isNaN(_distributionSteel)){\r\n        distSteelStatus = _providedDistSteel > _distributionSteel;\r\n    }\r\n    return distSteelStatus;\r\n}\r\n\r\nlet DistributionSteel = ({handleChange, inputData, designLoads, distSteel})=>{\r\n    // const combinedinput = {...inputData, ...designLoads, ...distSteel};\r\n    const {bar_dia, spacing_provided} = distSteel;\r\n    return(\r\n        <div className='distribution-steel'>\r\n            {/* <FormInput label='distribution steel' value={distributionSteel(combinedinput)} subHeading='mm2' readOnly /> */}\r\n            <FormInput label='bar dia' value={bar_dia} subHeading='mm' name='bar_dia' handleChange={handleChange} />\r\n            {/* <FormInput label='spacing required' value={spacingReq(combinedinput)} subHeading='mm' readOnly /> */}\r\n            <FormInput label='spacing provided' value={spacing_provided} name='spacing_provided' subHeading='mm'  handleChange={handleChange} />\r\n            <FormInput label='provided steel' value={providedDistSteel({bar_dia, spacing_provided})} subHeading='mm2' readOnly />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state)=>({\r\n    inputData: state.inputData,\r\n    designLoads: state.designLoads,\r\n    distSteel: state.distSteel\r\n})\r\n\r\nlet mapDispatchToProps = (dispatch)=>({\r\n    handleChange: (evt)=>(dispatch(handleDistSteelDataChange(evt)))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DistributionSteel)","export const CHECK_SHEAR_ACTION_TYPES = {\n    SET_CHECK_SHEAR_DATA_FIELD:\"SET_CHECK_SHEAR_DATA_FIELD\"\n}\n\nexport const handleShearDataChange = (evt)=>{\n    const {name, value} = evt.target;\n    return({\n        type:CHECK_SHEAR_ACTION_TYPES.SET_CHECK_SHEAR_DATA_FIELD,\n        payload:{[name]:value}\n    })\n}","import { connect } from \"react-redux\";\r\nimport { handleShearDataChange } from \"../../redux/check-shear/check-shear.actions\";\r\nimport { roundOfDecimal } from \"../../utils/number.utils\";\r\nimport { astAtSupport } from \"../area-tension-steel/area-tension-steel.component\";\r\nimport { factoredShear } from \"../factored-moment/factored-moment.component\";\r\nimport FormInput from \"../form-components/form-input/form-input.component\";\r\n\r\nexport const normalShearStress= (combinedinput)=>{\r\n    // (D45*1000)/(C9*(C8-C10))\r\n    const {b, d, effective_cover} = combinedinput;\r\n    let d45 = factoredShear(combinedinput) \r\n    let res = (d45 * 1000)/(b * (d - effective_cover));\r\n    \r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return roundOfDecimal(res,6);\r\n}\r\n\r\nlet fxn_pt = (combinedinput)=>{\r\n    // (100*D36)/(C9*(C8-C10))\r\n    const {b, d, effective_cover, ast} = combinedinput;\r\n    let d36 = astAtSupport(ast) \r\n    let res = (d36 * 100)/(b * (d - effective_cover));\r\n    \r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return roundOfDecimal(res, 3); \r\n}\r\n\r\nexport const fxn_permissibleStress = ({inputData, designLoads, ast})=>{\r\n    const combinedinput = {...inputData, ...designLoads, ...ast};\r\n    \r\n    let fck = combinedinput.fck;\r\n    let pt = fxn_pt({...inputData, ast});\r\n    let fckByPt = ((0.8*fck)/(6.89 * pt));\r\n    fckByPt = (fckByPt>1) ? fckByPt : 1;\r\n\r\n    let res = 0.85 * Math.sqrt(0.8*fck) * (Math.sqrt(1 + 5 * fckByPt)-1)/(6 * fckByPt);\r\n\r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return roundOfDecimal(res);\r\n}\r\n\r\nexport const isShearValid = (props)=>{\r\n    let ida = {...props.inputData, ...props.designLoads, ...props.ast};\r\n    let checkForShearStatus = false;\r\n    let _normalShearStress = normalShearStress(ida);\r\n    let _permissibleStress = fxn_permissibleStress(props);\r\n    if(!isNaN(_normalShearStress) && !isNaN(_permissibleStress)){\r\n        checkForShearStatus = _permissibleStress > _normalShearStress;\r\n    }\r\n    return checkForShearStatus;\r\n}\r\n\r\nlet CheckForShear = ({inputData, designLoads, ast})=>{\r\n    const combinedinput = {...inputData, ...designLoads, ...ast};\r\n    return(\r\n        <div className='check-for-shear'>\r\n            <FormInput label='Vu' value={factoredShear(combinedinput)} subHeading='kn' readOnly />\r\n            <FormInput label='nominal shear stress' value={normalShearStress(combinedinput)} subHeading='N/mm2' readOnly />\r\n            <FormInput label='pt' value={fxn_pt({...inputData, ast})} subHeading='%' readOnly />\r\n            <FormInput label='permissible stresses' name='permissible_stress' \r\n                value={fxn_permissibleStress({inputData, designLoads, ast})} subHeading='mm2' readOnly />\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state)=>({\r\n    inputData: state.inputData,\r\n    designLoads: state.designLoads,\r\n    ast: state.ast\r\n})\r\n\r\nlet mapDispatchToProps = (dispatch)=>({\r\n    handleChange: (evt)=>(dispatch(handleShearDataChange(evt)))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckForShear)","export const CHECK_DEFLECTION_ACTION_TYPES = {\n    SET_CHECK_DEFLECTION_DATA_FIELD:\"SET_CHECK_DEV_LEN_DATA_FIELD\"\n}\n\nexport const handleDeflectionChange = (evt)=>{\n    const {name, value} = evt.target;\n    return({\n        type:CHECK_DEFLECTION_ACTION_TYPES.SET_CHECK_DEFLECTION_DATA_FIELD,\n        payload:{[name]:value}\n    })\n}","import './form-select.styles.scss'\n\nlet FormSelect = ({label, handleChange, subHeading, options, ...otherSelectAttrs})=>{\n    return(\n        <div className=\"form-group\">\n            {\n                label \n                ? (<label className=\"input-label\">{label}</label>) \n                : null\n            }\n            <select className=\"form-select\"\n                onChange = {handleChange}\n                {...otherSelectAttrs}>\n                {\n                    options.map((option) => {\n                        let displayValue = option;\n                        let code = option;\n                        if( typeof option === 'object'){\n                            displayValue=option.displayValue;\n                            code=option.code;\n                        }\n                        return (<option key={code} value={code}>{displayValue}</option>)\n                    })\n                }\n            </select>\n            {\n                subHeading \n                ? (<span className=\"sub-heading\">{}</span>) \n                : null\n            }\n        </div>\n    );\n}\n\nexport default FormSelect","import { connect } from \"react-redux\";\r\nimport { handleDeflectionChange } from \"../../redux/check-deflection/check-deflection.actions\";\r\nimport { roundOfDecimal } from \"../../utils/number.utils\";\r\nimport { areaOfTensionSteel, providedSteel } from \"../area-tension-steel/area-tension-steel.component\"\r\nimport FormInput from \"../form-components/form-input/form-input.component\"\r\nimport FormSelect from \"../form-components/form-select/form-select.component\";\r\nimport { clear_span_eff_depth } from \"../spacing-depth/spacing-depth.component\";\r\n\r\nlet requiredPt = (combinedinput)=>{\r\n    const {b, d, effective_cover} = combinedinput;\r\n    let d30 = areaOfTensionSteel(combinedinput);\r\n    let res = (d30 * 100)/(b * (d - effective_cover));\r\n    \r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return roundOfDecimal(res, 3);\r\n}\r\n\r\nlet providedPt = (combinedinput)=>{\r\n    const {b, d, effective_cover} = combinedinput;\r\n    let d34 = providedSteel(combinedinput.ast)\r\n    let res = (d34 * 100)/(b * (d - effective_cover));\r\n    \r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return roundOfDecimal(res, 3);\r\n}\r\n\r\nexport const providedLd = (combinedinput)=>{\r\n    // (D13*1000)/(C8-C10)\r\n    const {clear_span, d, effective_cover} = combinedinput;\r\n    let d13 = clear_span_eff_depth(clear_span, d , effective_cover);\r\n    let res = (d13 * 1000)/(d - effective_cover);\r\n    \r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return roundOfDecimal(res, 6);\r\n}\r\n\r\nlet fxn_mod_mft = (_mod_fs, _providedPt)=>{\r\n    /* IF(\r\n        ROUND(1/(0.225+(0.00322*I55)-(0.625*LOG(1/K55,10))),2)\r\n        >=2,2,ROUND(1/(0.225+(0.00322*I55)-(0.625*LOG(1/K55,10))),2))\r\n    */\r\n    let _i55 = _mod_fs;\r\n    let _k55= _providedPt;\r\n    let res = roundOfDecimal(1/(0.225+(0.00322*_i55)-(0.625*Math.log10(1/_k55))))\r\n    \r\n    if(isNaN(res)) return \"\";\r\n    \r\n    if(res>2){\r\n        return 2;\r\n    }\r\n    return res;\r\n}\r\n\r\nlet fxn_mod_fs = ({mod_fac_fy, _requiredPt, _providedPt})=>{\r\n    let res = 0.58 * mod_fac_fy *_requiredPt / _providedPt;\r\n\r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return roundOfDecimal(res)\r\n}\r\n\r\nexport const fxn_max_ld = ({inputData, designLoads, ast, checkDeflection})=>{\r\n    const combinedinput = {...inputData, ...designLoads, ...ast};\r\n    const {mod_fac_fy} = checkDeflection;\r\n    let _requiredPt = requiredPt(combinedinput);\r\n    let _providedPt = providedPt({...inputData, ast});\r\n    let _mod_fs = fxn_mod_fs({mod_fac_fy, _requiredPt, _providedPt})\r\n    let res = 20 * fxn_mod_mft(_mod_fs, _providedPt);\r\n    \r\n    if(isNaN(res)) return \"\";\r\n    \r\n    return roundOfDecimal(res)\r\n}\r\n\r\nexport const isDeflectionValid = (props)=>{\r\n    let idaCd = {...props.inputData, ...props.designLoads, ...props.ast, ...props.CheckForDeflection};\r\n    \r\n    let checkForDeflectionStatus =  false;\r\n    let _max_ld = fxn_max_ld(props);\r\n    let _providedLd = providedLd(idaCd);\r\n    if(!isNaN(_max_ld) && !isNaN(_providedLd)){\r\n        checkForDeflectionStatus = _max_ld > _providedLd;\r\n    }\r\n\r\n    return checkForDeflectionStatus;\r\n}\r\n\r\n\r\nlet CheckForDeflection = ({handleChange, inputData, designLoads, ast, checkDeflection})=>{\r\n    const combinedinput = {...inputData, ...designLoads, ...ast};\r\n    const {mod_fac_fy} = checkDeflection;\r\n    let options = [215, 225, 240, 250, 330, 340, 350, 415, 500];\r\n    let _requiredPt = requiredPt(combinedinput);\r\n    let _providedPt = providedPt({...inputData, ast});\r\n    let _mod_fs = fxn_mod_fs({mod_fac_fy, _requiredPt, _providedPt})\r\n    let _mod_mft = fxn_mod_mft(_mod_fs, _providedPt);\r\n    return(\r\n        <div className=\"check-for-deflection\">\r\n            <FormInput label='required pt' value={_requiredPt} subHeading='kn' readOnly />\r\n            <FormInput label='provided pt' value={_providedPt} subHeading='N/mm2' readOnly />\r\n            <FormInput label='max l/d' value={20*_mod_mft} subHeading='%' readOnly />\r\n            <FormInput label='provided l/d' value={providedLd(combinedinput)} subHeading='mm2' readOnly />\r\n            <div className='mod-factor-for-tension'>\r\n                <table border='1'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th colSpan='5'>Modification factor for tension reinforcement</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan='5'>Ref IS 456:2000 Fig 4</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>fy</td>\r\n                            <td>fs</td>\r\n                            <td>pt req</td>\r\n                            <td>pt prov.</td>\r\n                            <td>MFt</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>N/mm2</td>\r\n                            <td>N/mm2</td>\r\n                            <td>%</td>\r\n                            <td>%</td>\r\n                            <td>IS 456 Fig 4</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><FormSelect options={options} value={mod_fac_fy} name='mod_fac_fy' handleChange={handleChange}/></td>\r\n                            <td>{_mod_fs}</td>\r\n                            <td>{_requiredPt}</td>\r\n                            <td>{_providedPt}</td>\r\n                            <td>{_mod_mft}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=>({\r\n    inputData: state.inputData,\r\n    designLoads: state.designLoads,\r\n    ast: state.ast,\r\n    checkDeflection: state.checkDeflection\r\n})\r\n\r\nconst mapDispatchToProps = dispatch=>({\r\n    handleChange: (evt) => dispatch(handleDeflectionChange(evt))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckForDeflection)","export const CHECK_DEV_LEN_ACTION_TYPES = {\n    SET_CHECK_DEV_LEN_DATA_FIELD:\"SET_CHECK_DEV_LEN_DATA_FIELD\"\n}\n\nexport const handleDevLengthChange = (evt)=>{\n    const {name, value} = evt.target;\n    return({\n        type:CHECK_DEV_LEN_ACTION_TYPES.SET_CHECK_DEV_LEN_DATA_FIELD,\n        payload:{[name]:value}\n    })\n}","import { connect } from \"react-redux\";\nimport { handleDevLengthChange } from \"../../redux/check-dev-length/check-dev-length.actions\";\nimport { roundOfDecimal } from \"../../utils/number.utils\";\nimport { astAtSupport } from \"../area-tension-steel/area-tension-steel.component\";\nimport { factoredShear } from \"../factored-moment/factored-moment.component\"\nimport FormInput from \"../form-components/form-input/form-input.component\"\nimport FormSelect from \"../form-components/form-select/form-select.component\";\n\nlet fxn_mu1 = ({fy, d, b, effective_cover, ast})=>{\n    // 0.87*C7*(C8-C10)*D36*(1-((D36*C7)/(C9*(C8-C10)*20)))\n    let _d36 = astAtSupport(ast);\n    let res = 0.87 * fy * (d - effective_cover)* _d36 * (1-((_d36* fy)/(b*(d-effective_cover)*20)))\n    \n    if(isNaN(res)) return \"\";\n    \n    return roundOfDecimal(res);\n}\n\nlet fxn_vu = ({clear_span, d,live_load, extra_dead_load})=>{\n    // D23*1000\n    let res = factoredShear({clear_span, d,live_load, extra_dead_load})* 1000;\n    if(isNaN(res)) return \"\";\n    return roundOfDecimal(res);\n}\n\nlet fxn_ld = ({fy, ast,m})=>{\n    // (D31*0.87*C7)/(4*E63)\n    let _d31 = ast.bar_dia;\n    let res = (_d31 * 0.87 * fy)/(4 * m)\n    if(isNaN(res)) return \"\";\n    return roundOfDecimal(res);\n}\n\nexport const isDevLengthValidUsingNoHooks = ({inputData, designLoads, checkDevLength, ast}) =>{\n    let {no_hooks_Lo, m} = checkDevLength;\n    let _mu1 = fxn_mu1({...inputData, ast});\n    let _vu = fxn_vu({...inputData, ...designLoads});\n    let _ld = fxn_ld({...inputData, ast,m});\n\n    let res = (_mu1/_vu)+no_hooks_Lo;\n    if(!isNaN(_ld) && !isNaN(res)){\n        res = res > _ld\n    }\n\n    return res;\n}\n\nexport const isDevLengthValid = ({inputData, designLoads, checkDevLength, ast}) =>{\n    let {m} = checkDevLength;\n    let _mu1 = fxn_mu1({...inputData, ast});\n    let _vu = fxn_vu({...inputData, ...designLoads});\n    let _ld = fxn_ld({...inputData, ast,m});\n    let _lo = 8 * ast.bar_dia;\n    let res = ((_mu1/_vu)+_lo)\n    if(!isNaN(_ld) && !isNaN(res)){\n        res = res > _ld\n    }\n\n    return res;\n}\n\nlet CheckDevLength = ({handleChange, inputData, designLoads, checkDevLength, ast})=>{\n    let {no_hooks_Lo, m_options, m} = checkDevLength;\n    let _mu1 = fxn_mu1({...inputData, ast});\n    let _vu = fxn_vu({...inputData, ...designLoads});\n    let _ld = fxn_ld({...inputData, ast,m});\n    let _lo = 8 * ast.bar_dia;\n    return(\n        <div className='check-dev-length'>\n            <FormInput value={_mu1} name='mu1' label='Mu1' subHeading='N/mm' readOnly/>\n            <FormInput value={_vu} name='Vu' label='Vu' subHeading='N'readOnly/>\n            <FormInput value={_ld} name='mu1' label='Ld' readOnly/> \n            <FormSelect options={m_options} value={m} name='m' handleChange={handleChange}/>\n            <FormInput value={no_hooks_Lo} name='no_hooks_lo' label='using no hooks, Lo' readOnly/>\n            <FormInput value={(_mu1/_vu)+no_hooks_Lo} label='(mu1/v)+Lo' readOnly/>\n            <FormInput value={_lo} name='lo' label='Lo' readOnly/>\n            <FormInput value={(_mu1/_vu)+_lo} label='(mu1/v)+Lo' readOnly/>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>({\n    inputData: state.inputData,\n    designLoads: state.designLoads,\n    ast: state.ast,\n    checkDevLength: state.checkDevLength\n})\n\nconst mapDispatchToProps = dispatch=>({\n    handleChange: (evt) => dispatch(handleDevLengthChange(evt))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckDevLength)","export const INPUT_DATA_ACTION_TYPES = {\n    SET_INPUT_DATA_FIELD:\"SET_INPUT_DATA_FIELD\"\n}\n\nexport const handleInputDataChange = (evt)=>{\n    const {name, value} = evt.target;\n    return({\n        type:INPUT_DATA_ACTION_TYPES.SET_INPUT_DATA_FIELD,\n        payload:{[name]:value}\n    })\n}","import { connect } from \"react-redux\";\r\nimport { handleInputDataChange } from \"../../redux/input-data/input-data.actions\";\r\nimport FormInput from \"../form-components/form-input/form-input.component\";\r\n\r\nimport './input-data.styles.scss'\r\n\r\nlet InputData = ({handleChange, clear_span,support_width, fck, fy, d, b , effective_cover})=>{\r\n    return(\r\n        <div className=\"input-data\">\r\n          <FormInput label='CLEAR SPAN' name='clear_span'\r\n            subHeading=\"m\"\r\n            value={clear_span} handleChange={handleChange}/>\r\n          <FormInput label='SUPPORT WIDTH' name='support_width'\r\n            subHeading=\"m\"\r\n            value={support_width} handleChange={handleChange}/>\r\n          <FormInput label='fck' name='fck'\r\n            subHeading=\"n/mm2\"\r\n            value={fck} handleChange={handleChange}/>\r\n          <FormInput label='fy' name='fy'\r\n            subHeading=\"n/mm3\" \r\n            value={fy} handleChange={handleChange}/>\r\n          <FormInput label='d' name='d'\r\n            subHeading=\"mm\" \r\n            value={d} handleChange={handleChange}/>\r\n          <FormInput label='b' name='b' \r\n            subHeading=\"mm\" \r\n            value={b} handleChange={handleChange}/>\r\n          <FormInput label='Effective Cover' name='effective_cover'\r\n            subHeading=\"mm\" \r\n            value={effective_cover} handleChange={handleChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n...state.inputData  \r\n})\r\n\r\nconst mapDispatchToProps = dispatch=>({\r\n  handleChange: (evt) => dispatch(handleInputDataChange(evt))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputData)","import './widget.styles.scss'\n\nlet Widget = ({title, className, children})=>{\n    return(\n        <div className={`widget ${className?className:\"\"}`}>\n            <h3 className=\"title\">{title}</h3>\n            <div className=\"widget-content\">\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default Widget","export const CONFIG_ACTION_TYPES = {\n    SWITCH_MODE: \"SWITCH_MODE\"\n}\nexport const switchDetailedView = (detailedView)=>({\n    type: CONFIG_ACTION_TYPES.SWITCH_MODE,\n    payload: !detailedView\n})","import { connect } from 'react-redux'\r\nimport {BsToggleOn, BsToggleOff} from 'react-icons/bs'\r\nimport { switchDetailedView } from '../../redux/configs/configs.actions'\r\nimport './header.styles.scss'\r\n\r\nlet Header = (props)=>{\r\n    const {configs, switchDetailedView} = props;\r\n    return(\r\n        <div className=\"header\">\r\n            <span className=\"app-title\">\r\n                One Way Slab\r\n                <span className=\"sub-title\">according to IS-456</span>\r\n            </span>\r\n            <div className=\"top-menu-icons\">\r\n                {\r\n                    configs.detailedView\r\n                    ? <BsToggleOn  color=\"green\" onClick={()=>switchDetailedView(configs.detailedView)}/>\r\n                    : <BsToggleOff onClick={()=>switchDetailedView(configs.detailedView)}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state)=>({\r\n    configs: state.configs\r\n})\r\n  \r\nlet mapDispatchToProps = (dispatch)=>({\r\n    switchDetailedView: (detailedView)=>(dispatch(switchDetailedView(detailedView))) \r\n})\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import { connect } from 'react-redux';\nimport { isAstValid } from '../area-tension-steel/area-tension-steel.component';\nimport { isDeflectionValid } from '../check-deflection/check-deflection.component';\nimport { isDevLengthValid, isDevLengthValidUsingNoHooks } from '../check-dev-length/check-dev-length.component';\nimport { isShearValid } from '../check-shear/check-shear.component';\nimport { isDistSteelValid } from '../distribution-steel/distribution-steel.component';\nimport { required_d } from '../effective-depth/effective-depth.component'\nimport Widget from '../widget/widget.component';\nimport './results.styles.scss'\n\nlet Results = (props)=>{\n    const {inputData, designLoads} = props;\n    let id = {...inputData, ...designLoads};\n    const {d} = inputData;\n\n    let depthStatus = false;\n    let _required_d = required_d(id);\n    if(d && _required_d){\n        depthStatus = d > _required_d;\n    }\n\n    let ast_Status =  isAstValid(props);\n    let distSteelStatus =  isDistSteelValid(props);\n    let checkForShearStatus =  isShearValid(props);\n    let checkForDeflectionStatus =  isDeflectionValid(props);\n    let _isDevLengthValidUsingNoHooks =  isDevLengthValidUsingNoHooks(props);\n    let _isDevLengthValid =  isDevLengthValid(props);\n    \n    return(\n        <div className=\"results\">\n            <StatusButton title=\"Input Data\" status={depthStatus} success=\"Depth Ok\" error=\"Increase Depth\"/>\n            <StatusButton title=\"AST\" status={ast_Status} success=\"AST Ok\" error=\"Increase Steel\"/>\n            <StatusButton title=\"Distribution Steel\" status={distSteelStatus} success=\"Distribution Steel Ok\" error=\"Increase Steel\"/>\n            <StatusButton title=\"Check for Shear\" status={checkForShearStatus} success=\"Shear Ok\" error=\"Revise d\"/>\n            <StatusButton title=\"Check for deflection\" status={checkForDeflectionStatus} success=\"Deflection Ok\" error=\"Revise d\"/>\n            <StatusButton title=\"Check for dev length (No Hooks)\" status={_isDevLengthValidUsingNoHooks} success=\"Dev Length Ok\" error=\"Provide bend at centre of support\"/>\n            <StatusButton title=\"Check for Dev Length\" status={_isDevLengthValid} success=\"Dev Length Ok\" error=\"Provide bend at centre of support\"/>\n        </div>\n    )\n}\n\nlet StatusButton = ({title, status, success, error})=>{\n    return(\n        <Widget className={`status-button ${status?\"success\":\"error\"}`} title={title}>\n            <span >{status?success:error}</span>\n        </Widget>\n    )\n}\n\nlet mapStateToProps = (state)=>({\n    inputData: state.inputData,\n    designLoads: state.designLoads,\n    ast: state.ast,\n    distSteel: state.distSteel,\n    checkDeflection: state.checkDeflection,\n    checkDevLength: state.checkDevLength\n})\n\nexport default connect(mapStateToProps)(Results)","import React from 'react';\nimport AreaOfTensionSteel from './components/area-tension-steel/area-tension-steel.component';\nimport DesignLoads from './components/design-loads/design-loads.component';\nimport DistributionSteel from './components/distribution-steel/distribution-steel.component';\nimport CheckForShear from './components/check-shear/check-shear.component';\nimport CheckForDeflection from './components/check-deflection/check-deflection.component';\nimport CheckDevLength from './components/check-dev-length/check-dev-length.component';\nimport InputData from './components/input-data/input-data.component';\nimport Widget from './components/widget/widget.component';\nimport Header from './components/header/header.component'\nimport SpacingAndDepth from './components/spacing-depth/spacing-depth.component'\nimport './App.scss';\nimport Results from './components/results/results.component';\nimport EffectiveDepth from './components/effective-depth/effective-depth.component';\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n  render(){\n    const {configs} = this.props; \n    return (\n      <div className=\"app-container\">\n        <Header/>\n        <div className=\"App\">\n          <Widget title=\"Input Data\">\n            <InputData/>\n          </Widget>\n          <div className=\"level2\">\n            <div className=\"level3\">\n              <Widget title=\"Design Loads\">\n                <DesignLoads/>\n              </Widget>\n              <Widget title=\"Area of Tension Steel (Ast)\">\n                <AreaOfTensionSteel/>\n              </Widget>\n              <Widget title=\"Distribution Steel\">\n                <DistributionSteel/>\n              </Widget>\n            </div>\n            <Results/>\n          </div>\n        </div>\n        {\n          configs.detailedView\n          ?(\n            <div className=\"app-detailed-view\">\n              <Widget title=\"Spacing And Depth\">\n                  <SpacingAndDepth/>\n                </Widget>\n                <Widget title=\"Check For Shear\">\n                  <CheckForShear/>\n                </Widget>\n                <Widget title=\"Check For Deflection\">\n                  <CheckForDeflection/>\n                </Widget>\n                <Widget title=\"Effective Depth\">\n                  <EffectiveDepth/>\n                </Widget>\n                <Widget title=\"Check Dev Length\">\n                  <CheckDevLength/>\n                </Widget>\n            </div>\n          )\n          :null\n        }\n      </div>\n    );\n  }\n}\n\nlet mapStateToProps = (state)=>({\n  configs: state.configs\n})\n\nexport default  connect(mapStateToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const INITIAL_STATE = {\r\n    configs:{\r\n        detailedView:false\r\n    },\r\n    inputData : {\r\n        clear_span:5.1,\r\n        support_width:0.23,\r\n        fck:30,\r\n        fy:500,\r\n        d:250,\r\n        b:1000,\r\n        effective_cover:25\r\n    },\r\n    designLoads:{\r\n        live_load:5,\r\n        extra_dead_load:4\r\n    },\r\n    ast:{\r\n        bar_dia:12,\r\n        spacing_provided:100\r\n    },\r\n    distSteel: {\r\n        bar_dia:8,\r\n        spacing_provided:150\r\n    },\r\n    checkShear:{\r\n        // permissible_stress:\"\"\r\n    },\r\n    checkDevLength:{\r\n        no_hooks_Lo: 0,\r\n        m:30,\r\n        m_options:[\r\n            {displayValue:\"20\", code:1.92},\r\n            {displayValue:\"25\", code:2.24},\r\n            {displayValue:\"30\", code:2.4},\r\n            {displayValue:\"35\", code:2.72},\r\n            {displayValue:\"40\", code:3.04}\r\n        ]\r\n    },\r\n    checkDeflection:{\r\n        // mod_fac_fy: \"\"\r\n    }\r\n}","import { INITIAL_STATE } from \"../default-state\";\nimport { DESIGN_LOADS_ACTION_TYPES } from \"./design-loads.actions\";\n\nconst init_state = INITIAL_STATE.designLoads\n\nexport const designLoadsReducer = (state=init_state, action)=>{\n    const {type, payload}=action;\n    switch(type){\n        case DESIGN_LOADS_ACTION_TYPES.SET_DATA_FIELD:{\n            return({\n                ...state,\n                ...payload\n            })\n        }\n        default:{\n            return({\n                ...state\n            })\n        }\n    }\n}","import { INITIAL_STATE } from \"../default-state\";\nimport { INPUT_DATA_ACTION_TYPES } from \"./input-data.actions\";\n\nconst init_state = INITIAL_STATE.inputData;\n\nexport const inputDataReducer = (state=init_state, action)=>{\n    const {type, payload}=action;\n    switch(type){\n        case INPUT_DATA_ACTION_TYPES.SET_INPUT_DATA_FIELD:{\n            return({\n                ...state,\n                ...payload\n            })\n        }\n        default:{\n            return({\n                ...state\n            })\n        }\n    }\n}","import { INITIAL_STATE } from \"../default-state\";\nimport { AST_DATA_ACTION_TYPES } from \"./ast.actions\";\n\nconst init_state = INITIAL_STATE.ast\n\nexport const astReducer = (state=init_state, action)=>{\n    const {type, payload}=action;\n    switch(type){\n        case AST_DATA_ACTION_TYPES.SET_AST_DATA_FIELD:{\n            return({\n                ...state,\n                ...payload\n            })\n        }\n        default:{\n            return({\n                ...state\n            })\n        }\n    }\n}","import { INITIAL_STATE } from \"../default-state\";\nimport { DIST_STEEL_DATA_ACTION_TYPES } from \"./dist-steel.actions\";\n\nconst init_state = INITIAL_STATE.distSteel\n\nexport const distSteelReducer = (state=init_state, action)=>{\n    const {type, payload}=action;\n    switch(type){\n        case DIST_STEEL_DATA_ACTION_TYPES.SET_DIST_STEEL_DATA_FIELD:{\n            return({\n                ...state,\n                ...payload\n            })\n        }\n        default:{\n            return({\n                ...state\n            })\n        }\n    }\n}","import { INITIAL_STATE } from \"../default-state\";\nimport { CHECK_SHEAR_ACTION_TYPES } from \"./check-shear.actions\";\n\nlet init_state = INITIAL_STATE.checkShear\n\nexport const checkShearReducer = (state=init_state, action)=>{\n    const {type, payload} = action;\n\n    switch(type){\n        case CHECK_SHEAR_ACTION_TYPES.SET_CHECK_SHEAR_DATA_FIELD:{\n            return({\n                ...state,\n                ...payload\n            })\n        }\n        default:{\n            return({\n                ...state\n            })\n        }\n    }\n}","import { INITIAL_STATE } from '../default-state';\nimport { CHECK_DEFLECTION_ACTION_TYPES} from './check-deflection.actions'\n\nlet init_state = INITIAL_STATE.checkDeflection\n\nexport const checkDeflectionReducer = (state = init_state, action)=>{\n    const {type, payload} = action;\n\n    switch(type){\n        case CHECK_DEFLECTION_ACTION_TYPES.SET_CHECK_DEFLECTION_DATA_FIELD:{\n            return({\n                ...state,\n                ...payload\n            })\n        }\n        default:{\n            return({\n                ...state\n            })\n        }\n    }\n}","import { INITIAL_STATE } from \"../default-state\";\nimport { CHECK_DEV_LEN_ACTION_TYPES } from \"./check-dev-length.actions\";\n\nlet init_state = INITIAL_STATE.checkDevLength\n\nexport const checkDevLengthReducer = (state = init_state, action)=>{\n    const {type, payload} = action;\n\n    switch(type){\n        case CHECK_DEV_LEN_ACTION_TYPES.SET_CHECK_DEV_LEN_DATA_FIELD:{\n            return({\n                ...state,\n                ...payload\n            })\n        }\n        default:{\n            return({\n                ...state\n            })\n        }\n    }\n}","import { combineReducers } from \"redux\";\nimport { designLoadsReducer } from \"./design-loads/design-loads.reducer\";\nimport { inputDataReducer } from \"./input-data/input-data.reducer\";\nimport { astReducer } from \"./ast/ast.reducer\";\nimport { distSteelReducer } from \"./dist-steel/dist-steel.reducer\";\nimport { checkShearReducer } from \"./check-shear/check-shear.reducer\";\nimport { checkDeflectionReducer } from \"./check-deflection/check-deflection.reducer\";\nimport { checkDevLengthReducer } from \"./check-dev-length/check-dev-length.reducer\";\nimport { configReducers } from \"./configs/configs.reducer\";\n\nexport default combineReducers ({\n    configs: configReducers,\n    inputData: inputDataReducer,\n    designLoads: designLoadsReducer,\n    ast: astReducer,\n    distSteel: distSteelReducer ,\n    checkShear: checkShearReducer,\n    checkDeflection: checkDeflectionReducer,\n    checkDevLength: checkDevLengthReducer\n})","import { INITIAL_STATE } from \"../default-state\";\nimport { CONFIG_ACTION_TYPES } from \"./configs.actions\";\n\nexport const configReducers = (state = INITIAL_STATE.configs, action)=>{\n    const {type, payload} = action;\n    switch(type){\n        case CONFIG_ACTION_TYPES.SWITCH_MODE:{\n            return {\n                ...state,\n                detailedView: payload\n            }\n        }\n        default:{\n            return state\n        }\n\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\n\nimport rootReducer from './root.reducer'\n\nlet middleWares = [logger];\n\nconst store = createStore(rootReducer, applyMiddleware(...middleWares))\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store'\nimport { IconContext } from 'react-icons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <IconContext.Provider value={{color: '#0a477b', className:\"react-icon\", size:\"2.5em\"}}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </IconContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}