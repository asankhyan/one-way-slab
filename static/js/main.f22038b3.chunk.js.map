{"version":3,"sources":["utils/number.utils.js","components/form-components/form-input/form-input.component.jsx","components/design-loads/design-loads.component.jsx","components/spacing-depth/spacing-depth.component.jsx","components/factored-moment/factored-moment.component.jsx","components/effective-depth/effective-depth.component.jsx","components/area-tension-steel/area-tension-steel.component.jsx","components/form-components/form-select/form-select.component.jsx","components/check-deflection/check-deflection.component.jsx","components/check-dev-length/check-dev-length.component.jsx","components/check-shear/check-shear.component.jsx","components/distribution-steel/distribution-steel.component.jsx","components/input-data/input-data.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["roundOfDecimal","input","places","toFixed","FormInput","label","handleChange","subHeading","otherInputAttrs","className","onChange","selfweight_of_slab","d","designLoad","live_load","extra_dead_load","res","parseFloat","DesignLoads","readOnly","value","name","centre_to_centre_spacing","clear_span","support_width","clear_span_eff_depth","effective_cover","SpacingAndDepth","factoredMoment","D19","D12","D13","Math","pow","factoredShear","FactoredMoments","inputData","designLoads","max_d","fy","ru","fck","d26","required_d","b","d22","d27","sqrt","fxn_a","fxn_b","fxn_c","quadraticEq","neg","_a","_b","_c","EffectiveDepth","combinedinput","areaOfTensionSteel","pos","min","spacingReq","d30","d31","bar_dia","providedSteel","spacing_provided","astAtSupport","AreaOfTensionSteel","ast","FormSelect","options","otherSelectAttrs","map","option","displayValue","code","providedLd","d13","CheckForDeflection","check_deflection","mod_fac_fy","_requiredPt","requiredPt","_providedPt","d34","providedPt","_mod_fs","fxn_mod_fs","_mod_mft","_k55","log10","fxn_mod_mft","border","colSpan","CheckDevLength","checkDevLength","no_hooks_Lo","m_options","m","_mu1","_d36","fxn_mu1","_vu","fxn_vu","_ld","_d31","console","log","fxn_ld","_lo","normalShearStress","d45","fxn_pt","d36","CheckForShear","check_for_shear","permissible_stress","distributionSteel","DistributionSteel","dist_steel","InputData","App","props","evt","target","setState","state","input_data","design_loads","check_dev_length","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f22038b3.chunk.js","sourcesContent":["export const roundOfDecimal = (input, places=2) => {\r\n    if(input){\r\n        return input.toFixed(places);\r\n    }\r\n    return input;\r\n}","import './form-input.styles.scss'\r\n\r\nlet FormInput = ({label, handleChange, subHeading, ...otherInputAttrs})=>{\r\n    return(\r\n        <div className=\"form-group\">\r\n            {\r\n                label \r\n                ? (<label className=\"input-label\">{label}</label>) \r\n                : null\r\n            }\r\n            <input className=\"form-input\"\r\n                onChange = {handleChange}\r\n                {...otherInputAttrs}/>\r\n            {\r\n                subHeading \r\n                ? (<span className=\"sub-heading\">{subHeading}</span>) \r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormInput","import { roundOfDecimal } from \"../../utils/number.utils\";\nimport FormInput from \"../form-components/form-input/form-input.component\";\n\nexport const selfweight_of_slab = (d)=>{\n  //=(D16+D17+D18)*1.5\n  let res = (25 * d / 1000);\n  return roundOfDecimal(res);\n}\n\nexport const designLoad = (d, live_load, extra_dead_load)=>{\n  //=(D16+D17+D18)*1.5\n  let res = (parseFloat(selfweight_of_slab(d)) + parseFloat(live_load) + parseFloat(extra_dead_load)) * 1.5;\n  return roundOfDecimal(res, 3);\n}\n\nlet DesignLoads = ({handleChange,d, live_load, extra_dead_load})=>{\n  return(\n      <div className=\"design-loads\">\n        <FormInput label='selfweight of slab' subHeading=\"kn/m2\" readOnly value={selfweight_of_slab(d)}/>\n        <FormInput label='live load' name='live_load' subHeading=\"kn/m3\" handleChange = {handleChange} value={live_load}/>\n        <FormInput label='extra dead load' name='extra_dead_load' subHeading=\"kn/m4\" handleChange = {handleChange} value={extra_dead_load}/>\n        <FormInput label='design load' readOnly value={designLoad(d, live_load, extra_dead_load)}/>\n      </div>\n  );\n}\n\nexport default DesignLoads\n","import FormInput from \"../form-components/form-input/form-input.component\";\r\n\r\nexport const centre_to_centre_spacing = (clear_span, support_width)=>{\r\n    //=C4+C5\r\n    let spacing = parseFloat(clear_span) + parseFloat(support_width); \r\n    return spacing;\r\n}\r\n\r\nexport const clear_span_eff_depth = (clear_span, d , effective_cover)=>{\r\n    //=C4+((C8-C10)/1000)\r\n    let effDepth = parseFloat(clear_span) + ((parseFloat(d) - parseFloat(effective_cover))/1000); \r\n    return effDepth; \r\n}\r\n\r\nlet SpacingAndDepth = ({clear_span, support_width, d , effective_cover})=>{\r\n    return(\r\n        <div className=\"space-depth\">\r\n          <FormInput label='Centre to Centre spacing'\r\n            subHeading=\"mm\" readOnly\r\n            value={centre_to_centre_spacing(clear_span, support_width)}/>\r\n          <FormInput label='Clear span + Effective depth'\r\n            subHeading=\"mm\" readOnly\r\n            value={clear_span_eff_depth(clear_span, d , effective_cover)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SpacingAndDepth","import { roundOfDecimal } from \"../../utils/number.utils\";\nimport { designLoad } from \"../design-loads/design-loads.component\";\nimport FormInput from \"../form-components/form-input/form-input.component\";\nimport { centre_to_centre_spacing, clear_span_eff_depth } from \"../spacing-depth/spacing-depth.component\";\n\nexport const factoredMoment = ({d, clear_span, effective_cover, support_width,live_load, extra_dead_load})=>{\n  //=(D19*POWER(MAX(D12:D13),2))/8\n  let D19 = designLoad(d, live_load, extra_dead_load);\n  let D12 = centre_to_centre_spacing(clear_span, support_width);\n  let D13 = clear_span_eff_depth(clear_span, d , effective_cover);\n  let res = D19 *  Math.pow((D13>D12?D13:D12), 2) / 8;\n  return roundOfDecimal(res, 3);\n}\n\nexport const factoredShear = ({clear_span, d,live_load, extra_dead_load})=>{\n  //=D19*C4/2\n  let D19 = designLoad(d,live_load, extra_dead_load);\n  let res = (D19 * parseFloat(clear_span))/ 2;\n  return roundOfDecimal(res, 3);\n}\n\nlet FactoredMoments = ({inputData, designLoads})=>{\n  return(\n      <div className=\"factored-moment\">\n        <FormInput label='factored moment, Mu'\n          subHeading=\"kn/m\" readOnly\n          value={factoredMoment({...inputData, ...designLoads})}/>\n        <FormInput label='factored shear force, Vu'\n          subHeading=\"kn\" readOnly\n          value={factoredShear({...inputData, ...designLoads})}/>\n      </div>\n  );\n}\n\nexport default FactoredMoments","import { roundOfDecimal } from \"../../utils/number.utils\";\r\nimport { factoredMoment } from \"../factored-moment/factored-moment.component\";\r\nimport FormInput from \"../form-components/form-input/form-input.component\"\r\n\r\nlet max_d = ({fy})=>{\r\n    return parseFloat(fy)===500?0.46:0.48;\r\n}\r\nlet ru = ({fy, fck})=>{\r\n    //0.36*C6*D26*(1-(0.42*D26))\r\n    let d26 = max_d(fy);\r\n    let res = (0.36 * fck * d26 * (1 - (0.42*d26)));\r\n    return roundOfDecimal(res);\r\n}\r\n\r\nlet required_d = (input)=>{\r\n    // SQRT((D22*1000000)/(D27*C9))\r\n    const {fy, fck, b} = input;\r\n    let d22 = factoredMoment(input);\r\n    let d27 = ru({fy, fck});\r\n    let res = Math.sqrt((d22 * 1000000)/(d27 * b));\r\n    return roundOfDecimal(res)\r\n}\r\n\r\nlet fxn_a = ({fck, fy, d, b, effective_cover})=>{\r\n    // (0.87*(C8-C10)*C7*C7)/(C6*C9*(C8-C10))\r\n    let res = (0.87*(d-effective_cover)*fy*fy)/(fck*b*(d-effective_cover));\r\n    return res;\r\n}\r\n\r\nlet fxn_b = ({fy, d, effective_cover})=>{\r\n    // -(0.87*(C8-C10)*C7)\r\n    let res = -(0.87*(d-effective_cover)*fy);\r\n    return res;\r\n}\r\n\r\nlet fxn_c = (input)=>{\r\n    // D22*1000000\r\n    let d22 = factoredMoment(input);\r\n    let res = d22 * 1000000;\r\n    return res;\r\n}\r\n\r\nexport const quadraticEq = (input, neg)=>{\r\n    const {fck, fy, d, b, effective_cover} = input;\r\n    let _a = fxn_a({fck, fy, d, b, effective_cover});\r\n    let _b = fxn_b({fy, d, effective_cover});\r\n    let _c = fxn_c(input);\r\n    //(-P26+(SQRT((P26*P26)-(4*P25*P27))))/(2*P25)\r\n    \r\n    let res = (-_b + (neg?-1:1) * (Math.sqrt((_b*_b)-(4*_a*_c))))/(2 * _a);\r\n    return roundOfDecimal(res, 3);;\r\n}\r\n\r\nlet EffectiveDepth = ({handleChange, inputData, designLoads})=>{\r\n    const combinedinput = {...inputData, ...designLoads};\r\n    return(\r\n        <div className='eff-depth'>\r\n            <div>\r\n                <FormInput label='Xu max/d' value={max_d(inputData)} readOnly/>\r\n                <FormInput label='Ru' value={ru(inputData)} readOnly/>\r\n                <FormInput label='required d' value={required_d(combinedinput)} subHeading='mm' readOnly/>\r\n            </div>\r\n            <div>\r\n                <FormInput label='a' value={fxn_a(inputData)} readOnly/>\r\n                <FormInput label='b' value={fxn_b(inputData)} readOnly/>\r\n                <FormInput label='c' value={fxn_c(combinedinput)} readOnly/>\r\n                <div className='quadratic-eq'>\r\n                    <label>Quadratic Eq</label>\r\n                    <FormInput value={quadraticEq(combinedinput)} readOnly/>\r\n                    <FormInput value={quadraticEq(combinedinput, true)} readOnly/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EffectiveDepth","import { roundOfDecimal } from \"../../utils/number.utils\";\r\nimport { quadraticEq } from \"../effective-depth/effective-depth.component\"\r\nimport FormInput from \"../form-components/form-input/form-input.component\";\r\n\r\nexport const areaOfTensionSteel = (combinedinput)=>{\r\n    let pos = quadraticEq(combinedinput);\r\n    let neg = quadraticEq(combinedinput, true);\r\n    return Math.min(pos, neg);\r\n}\r\n\r\nlet spacingReq = (combinedinput)=>{\r\n    let d30 = areaOfTensionSteel(combinedinput);\r\n    let d31 = combinedinput.bar_dia;\r\n    let res = (1000 * ((3.14/4)*d31*d31))/d30;\r\n    return roundOfDecimal(res);\r\n}\r\n\r\nexport const providedSteel = ({bar_dia, spacing_provided})=>{\r\n    let res = (1000 * ((3.14/4)*bar_dia*bar_dia))/spacing_provided;\r\n    return roundOfDecimal(res);\r\n}\r\n\r\nexport const astAtSupport = ({bar_dia, spacing_provided})=>{\r\n    let res = providedSteel({bar_dia, spacing_provided})/2;\r\n    return roundOfDecimal(res, 3);\r\n}\r\n\r\nlet AreaOfTensionSteel = ({inputData, designLoads, ast})=>{\r\n    const combinedinput = {...inputData, ...designLoads, ...ast};\r\n    const {bar_dia, spacing_provided, handleChange} = ast;\r\n    return(\r\n        <div className='area-of-tension-steel'>\r\n            <FormInput label='Area of tension steel (Ast)' value={areaOfTensionSteel(combinedinput)} subHeading='mm2' readOnly />\r\n            <FormInput label='bar dia' value={ast.bar_dia} subHeading='mm' name='bar_dia' handleChange={handleChange} />\r\n            <FormInput label='spacing required' value={spacingReq(combinedinput)} subHeading='mm' readOnly />\r\n            <FormInput label='spacing provided' value={ast.spacing_provided} name='spacing_provided' subHeading='mm'  handleChange={handleChange} />\r\n            <FormInput label='provided steel' value={providedSteel({bar_dia, spacing_provided})} subHeading='mm2' readOnly />\r\n            <FormInput label='Ast at support' value={astAtSupport({bar_dia, spacing_provided})} subHeading='mm2' readOnly />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AreaOfTensionSteel","import './form-select.styles.scss'\n\nlet FormSelect = ({label, handleChange, subHeading, options, ...otherSelectAttrs})=>{\n    return(\n        <div className=\"form-group\">\n            {\n                label \n                ? (<label className=\"input-label\">{label}</label>) \n                : null\n            }\n            <select className=\"form-select\"\n                onChange = {handleChange}\n                {...otherSelectAttrs}>\n                {\n                    options.map((option) => {\n                        let displayValue = option;\n                        let code = option;\n                        if( typeof option === 'object'){\n                            displayValue=option.displayValue;\n                            code=option.code;\n                        }\n                        return (<option key={code} value={code}>{displayValue}</option>)\n                    })\n                }\n            </select>\n            {\n                subHeading \n                ? (<span className=\"sub-heading\">{}</span>) \n                : null\n            }\n        </div>\n    );\n}\n\nexport default FormSelect","import { roundOfDecimal } from \"../../utils/number.utils\";\r\nimport { areaOfTensionSteel, providedSteel } from \"../area-tension-steel/area-tension-steel.component\"\r\nimport FormInput from \"../form-components/form-input/form-input.component\"\r\nimport FormSelect from \"../form-components/form-select/form-select.component\";\r\nimport { clear_span_eff_depth } from \"../spacing-depth/spacing-depth.component\";\r\n\r\nlet requiredPt = (combinedinput)=>{\r\n    const {b, d, effective_cover} = combinedinput;\r\n    let d30 = areaOfTensionSteel(combinedinput);\r\n    let res = (d30 * 100)/(b * (d - effective_cover));\r\n    return roundOfDecimal(res, 3);\r\n}\r\n\r\nlet providedPt = (combinedinput)=>{\r\n    const {b, d, effective_cover} = combinedinput;\r\n    let d34 = providedSteel(combinedinput.ast)\r\n    let res = (d34 * 100)/(b * (d - effective_cover));\r\n    return roundOfDecimal(res, 3);\r\n}\r\n\r\nlet providedLd = (combinedinput)=>{\r\n    // (D13*1000)/(C8-C10)\r\n    const {clear_span, d, effective_cover} = combinedinput;\r\n    let d13 = clear_span_eff_depth(clear_span, d , effective_cover);\r\n    let res = (d13 * 1000)/(d - effective_cover);\r\n    return roundOfDecimal(res, 6);\r\n}\r\n\r\nlet fxn_mod_mft = (_mod_fs, _providedPt)=>{\r\n    /* IF(\r\n        ROUND(1/(0.225+(0.00322*I55)-(0.625*LOG(1/K55,10))),2)\r\n        >=2,2,ROUND(1/(0.225+(0.00322*I55)-(0.625*LOG(1/K55,10))),2))\r\n    */\r\n    let _i55 = _mod_fs;\r\n    let _k55= _providedPt;\r\n    let res = roundOfDecimal(1/(0.225+(0.00322*_i55)-(0.625*Math.log10(1/_k55))))\r\n    if(res>2){\r\n        return 2;\r\n    }\r\n    return res;\r\n}\r\n\r\nlet fxn_mod_fs = ({mod_fac_fy, _requiredPt, _providedPt})=>{\r\n    return roundOfDecimal(0.58 * mod_fac_fy *_requiredPt / _providedPt)\r\n}\r\n\r\nlet CheckForDeflection = ({inputData, designLoads, ast, check_deflection})=>{\r\n    const combinedinput = {...inputData, ...designLoads, ...ast};\r\n    const {mod_fac_fy, handleChange} = check_deflection;\r\n    let options = [215, 225, 240, 250, 330, 340, 350, 415, 500];\r\n    let _requiredPt = requiredPt(combinedinput);\r\n    let _providedPt = providedPt({...inputData, ast});\r\n    let _mod_fs = fxn_mod_fs({mod_fac_fy, _requiredPt, _providedPt})\r\n    let _mod_mft = fxn_mod_mft(_mod_fs, _providedPt);\r\n    return(\r\n        <div className=\"check-for-deflection\">\r\n            <FormInput label='required pt' value={_requiredPt} subHeading='kn' readOnly />\r\n            <FormInput label='provided pt' value={_providedPt} subHeading='N/mm2' readOnly />\r\n            <FormInput label='max l/d' value={20*1} subHeading='%' readOnly />\r\n            <FormInput label='provided l/d' value={providedLd(combinedinput)} subHeading='mm2' readOnly />\r\n            <div className='mod-factor-for-tension'>\r\n                <table border='1'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th colSpan='5'>Modification factor for tension reinforcement</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan='5'>Ref IS 456:2000 Fig 4</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>fy</td>\r\n                            <td>fs</td>\r\n                            <td>pt req</td>\r\n                            <td>pt prov.</td>\r\n                            <td>MFt</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>N/mm2</td>\r\n                            <td>N/mm2</td>\r\n                            <td>%</td>\r\n                            <td>%</td>\r\n                            <td>IS 456 Fig 4</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><FormSelect options={options} value={check_deflection.mod_fac_fy} name='mod_fac_fy' handleChange={handleChange}/></td>\r\n                            <td>{_mod_fs}</td>\r\n                            <td>{_requiredPt}</td>\r\n                            <td>{_providedPt}</td>\r\n                            <td>{_mod_mft}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckForDeflection;","import { astAtSupport } from \"../area-tension-steel/area-tension-steel.component\";\nimport { factoredShear } from \"../factored-moment/factored-moment.component\"\nimport FormInput from \"../form-components/form-input/form-input.component\"\nimport FormSelect from \"../form-components/form-select/form-select.component\";\n\nlet fxn_mu1 = ({fy, d, b, effective_cover, ast})=>{\n    // 0.87*C7*(C8-C10)*D36*(1-((D36*C7)/(C9*(C8-C10)*20)))\n    let _d36 = astAtSupport(ast);\n    return 0.87 * fy * (d - effective_cover)* _d36 * (1-((_d36* fy)/(b*(d-effective_cover)*20)))\n}\n\nlet fxn_vu = ({clear_span, d,live_load, extra_dead_load})=>{\n    // D23*1000\n    return factoredShear({clear_span, d,live_load, extra_dead_load})* 1000;\n}\n\nlet fxn_ld = ({fy, ast,m})=>{\n    // (D31*0.87*C7)/(4*E63)\n    let _d31 = ast.bar_dia;\n    console.log({fy, ast,m});\n    return (_d31 * 0.87 * fy)/(4 * m)\n}\n\nlet CheckDevLength = ({inputData, designLoads, checkDevLength, ast})=>{\n    let {no_hooks_Lo, m_options, m, handleChange} = checkDevLength;\n    let _mu1 = fxn_mu1({...inputData, ast});\n    let _vu = fxn_vu({...inputData, ...designLoads});\n    let _ld = fxn_ld({...inputData, ast,m});\n    let _lo = 8 * ast.bar_dia;\n    return(\n        <div className='check-dev-length'>\n            <FormInput value={_mu1} name='mu1' label='Mu1' subHeading='N/mm'/>\n            <FormInput value={_vu} name='Vu' label='Vu' subHeading='N'/>\n            <FormInput value={_ld} name='mu1' label='Ld'/> \n            <FormSelect options={m_options} value={m} name='m' handleChange={handleChange}/>\n            <FormInput value={no_hooks_Lo} name='no_hooks_lo' label='using no hooks, Lo'/>\n            <FormInput value={(_mu1/_vu)+no_hooks_Lo} label='(mu1/v)+Lo'/>\n            <FormInput value={_lo} name='lo' label='Lo'/>\n            <FormInput value={(_mu1/_vu)+_lo} label='(mu1/v)+Lo'/>\n        </div>\n    )\n}\n\nexport default CheckDevLength","import { roundOfDecimal } from \"../../utils/number.utils\";\r\nimport { astAtSupport } from \"../area-tension-steel/area-tension-steel.component\";\r\nimport { factoredShear } from \"../factored-moment/factored-moment.component\";\r\nimport FormInput from \"../form-components/form-input/form-input.component\";\r\n\r\nlet normalShearStress= (combinedinput)=>{\r\n    // (D45*1000)/(C9*(C8-C10))\r\n    const {b, d, effective_cover} = combinedinput;\r\n    let d45 = factoredShear(combinedinput) \r\n    let res = (d45 * 1000)/(b * (d - effective_cover));\r\n    return roundOfDecimal(res,6); \r\n}\r\n\r\nlet fxn_pt = (combinedinput)=>{\r\n    // (100*D36)/(C9*(C8-C10))\r\n    const {b, d, effective_cover, ast} = combinedinput;\r\n    let d36 = astAtSupport(ast) \r\n    let res = (d36 * 100)/(b * (d - effective_cover));\r\n    return roundOfDecimal(res, 3); \r\n}\r\n\r\nlet CheckForShear = ({inputData, designLoads, ast, check_for_shear})=>{\r\n    const combinedinput = {...inputData, ...designLoads, ...ast, ...check_for_shear};\r\n    const {handleChange} = check_for_shear;\r\n    return(\r\n        <div className='check-for-shear'>\r\n            <FormInput label='Vu' value={factoredShear(combinedinput)} subHeading='kn' readOnly />\r\n            <FormInput label='nominal shear stress' value={normalShearStress(combinedinput)} subHeading='N/mm2' readOnly />\r\n            <FormInput label='pt' value={fxn_pt({...inputData, ast})} subHeading='%' readOnly />\r\n            <FormInput label='permissible stresses' name='permissible_stress' \r\n                value={check_for_shear.permissible_stress} subHeading='mm2' handleChange={handleChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckForShear","import { roundOfDecimal } from \"../../utils/number.utils\";\r\nimport { quadraticEq } from \"../effective-depth/effective-depth.component\"\r\nimport FormInput from \"../form-components/form-input/form-input.component\"\r\n\r\nlet distributionSteel = (combinedinput)=>{\r\n    let pos = quadraticEq(combinedinput);\r\n    let neg = quadraticEq(combinedinput, true);\r\n    return Math.min(pos, neg);\r\n}\r\n\r\nlet spacingReq = (combinedinput)=>{\r\n    let d30 = distributionSteel(combinedinput);\r\n    let d31 = combinedinput.bar_dia;\r\n    let res = (1000 * ((3.14/4)*d31*d31))/d30;\r\n    return roundOfDecimal(res);\r\n}\r\n\r\nlet providedSteel = ({bar_dia, spacing_provided})=>{\r\n    let res = (1000 * ((3.14/4)*bar_dia*bar_dia))/spacing_provided;\r\n    return roundOfDecimal(res);\r\n}\r\n\r\nlet DistributionSteel = ({inputData, designLoads, dist_steel})=>{\r\n    const combinedinput = {...inputData, ...designLoads, ...dist_steel};\r\n    const {bar_dia, spacing_provided, handleChange} = dist_steel;\r\n    return(\r\n        <div className='distribution-steel'>\r\n            <FormInput label='distribution steel' value={distributionSteel(combinedinput)} subHeading='mm2' readOnly />\r\n            <FormInput label='bar dia' value={dist_steel.bar_dia} subHeading='mm' name='bar_dia' handleChange={handleChange} />\r\n            <FormInput label='spacing required' value={spacingReq(combinedinput)} subHeading='mm' readOnly />\r\n            <FormInput label='spacing provided' value={dist_steel.spacing_provided} name='spacing_provided' subHeading='mm'  handleChange={handleChange} />\r\n            <FormInput label='provided steel' value={providedSteel({bar_dia, spacing_provided})} subHeading='mm2' readOnly />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DistributionSteel","import FormInput from \"../form-components/form-input/form-input.component\";\r\n\r\nlet InputData = ({handleChange, clear_span,support_width, fck, fy, d, b , effective_cover})=>{\r\n    return(\r\n        <div className=\"input-data\">\r\n          <FormInput label='CLEAR SPAN' name='clear_span'\r\n            subHeading=\"m\"\r\n            value={clear_span} handleChange={handleChange}/>\r\n          <FormInput label='SUPPORT WIDTH' name='support_width'\r\n            subHeading=\"m\"\r\n            value={support_width} handleChange={handleChange}/>\r\n          <FormInput label='fck' name='fck'\r\n            subHeading=\"n/mm2\"\r\n            value={fck} handleChange={handleChange}/>\r\n          <FormInput label='fy' name='fy'\r\n            subHeading=\"n/mm3\" \r\n            value={fy} handleChange={handleChange}/>\r\n          <FormInput label='d' name='d'\r\n            subHeading=\"mm\" \r\n            value={d} handleChange={handleChange}/>\r\n          <FormInput label='b' name='b' \r\n            subHeading=\"mm\" \r\n            value={b} handleChange={handleChange}/>\r\n          <FormInput label='Effective Cover' name='effective_cover'\r\n            subHeading=\"mm\" \r\n            value={effective_cover} handleChange={handleChange}/>\r\n        </div>\r\n    );\r\n}\r\nexport default InputData","import React from 'react';\nimport './App.css';\nimport AreaOfTensionSteel from './components/area-tension-steel/area-tension-steel.component';\nimport CheckForDeflection from './components/check-deflection/check-deflection.component';\nimport CheckDevLength from './components/check-dev-length/check-dev-length.component';\nimport CheckForShear from './components/check-shear/check-shear.component';\nimport DesignLoads from './components/design-loads/design-loads.component';\nimport DistributionSteel from './components/distribution-steel/distribution-steel.component';\nimport EffectiveDepth from './components/effective-depth/effective-depth.component';\nimport FactoredMoments from './components/factored-moment/factored-moment.component';\nimport InputData from './components/input-data/input-data.component';\nimport SpacingAndDepth from './components/spacing-depth/spacing-depth.component';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      input_data:{\n        clear_span:\"5.1\",\n        support_width:\"0.23\",\n        fck:\"25\",\n        fy:\"500\",\n        d:\"250\",\n        b:\"1000\",\n        effective_cover:\"20\",\n        handleChange: (evt)=>{\n          const {name, value} = evt.target;\n          let input_data = this.state.input_data;\n          input_data[name] = value;\n          this.setState({input_data:input_data})\n        }\n      },\n      design_loads:{\n        live_load:\"5\",\n        extra_dead_load:\"4\",\n        handleChange: (evt)=>{\n          const {name, value} = evt.target;\n          let design_loads = this.state.design_loads;\n          design_loads[name] = value;\n          this.setState({design_loads:design_loads})\n        }\n      },\n      ast:{\n        bar_dia:\"12\",\n        spacing_provided:\"100\",\n        handleChange: (evt)=>{\n          const {name, value} = evt.target;\n          let ast = this.state.ast;\n          ast[name] = value;\n          this.setState({ast:ast})\n        }\n      },\n      dist_steel:{\n        bar_dia:\"8\",\n        spacing_provided:\"150\",\n        handleChange: (evt)=>{\n          const {name, value} = evt.target;\n          let dist_steel = this.state.dist_steel;\n          dist_steel[name] = value;\n          this.setState({dist_steel:dist_steel})\n        }\n      },\n      check_for_shear:{\n        permissible_stress:\"0.38\",\n        handleChange: (evt)=>{\n          const {name, value} = evt.target;\n          let check_for_shear = this.state.check_for_shear;\n          check_for_shear[name] = value;\n          this.setState({check_for_shear:check_for_shear})\n        }\n      },\n      check_deflection:{\n        mod_fac_fy: 500,\n        handleChange: (evt)=>{\n          const {name, value} = evt.target;\n          let check_deflection = this.state.check_deflection;\n          check_deflection[name] = value;\n          this.setState({check_deflection:check_deflection})\n        }\n\n      },\n      check_dev_length:{\n        no_hooks_Lo: 0,\n        m:1.92,\n        m_options:[\n          {displayValue:\"20\", code:1.92},\n          {displayValue:\"25\", code:2.24},\n          {displayValue:\"30\", code:2.4},\n          {displayValue:\"35\", code:2.72},\n          {displayValue:\"40\", code:3.04}\n        ],\n        handleChange: (evt)=>{\n          const {name, value} = evt.target;\n          let check_dev_length = this.state.check_dev_length;\n          check_dev_length[name] = value;\n          this.setState({check_dev_length:check_dev_length})\n        }\n      }\n    }\n  }\n  \n  handleChange = (evt)=>{\n    const {name, value} = evt.target;\n    this.setState({[name]:value});\n  }\n\n  render(){\n    const {d} = this.state.input_data;\n    return (\n      <div className=\"App\">\n        <InputData {...this.state.input_data}/>\n        <SpacingAndDepth {...this.state.input_data}/>\n        <DesignLoads d={d} {...this.state.design_loads}/>\n        <FactoredMoments inputData={this.state.input_data} designLoads={this.state.design_loads}/>\n        <EffectiveDepth inputData={this.state.input_data} designLoads={this.state.design_loads}/>\n        <AreaOfTensionSteel inputData={this.state.input_data} designLoads={this.state.design_loads} ast={this.state.ast}/>\n        <DistributionSteel inputData={this.state.input_data} designLoads={this.state.design_loads}\n          dist_steel={this.state.dist_steel}/>\n        <CheckForShear inputData={this.state.input_data} designLoads={this.state.design_loads}\n          ast={this.state.ast} check_for_shear = {this.state.check_for_shear}/>\n        <CheckForDeflection inputData={this.state.input_data} designLoads={this.state.design_loads}\n          ast={this.state.ast} check_deflection = {this.state.check_deflection}/>\n        <CheckDevLength inputData={this.state.input_data} designLoads={this.state.design_loads}\n          ast={this.state.ast} checkDevLength = {this.state.check_dev_length}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}